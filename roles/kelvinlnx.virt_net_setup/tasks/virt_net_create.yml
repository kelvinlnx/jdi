- name: "INFO: Get all libvirt network names"
  virt_net:
    command: list_nets
  register: a_result

- name: "ASSERT: network not already defined"
  assert:
    that: virt_net_name not in a_result.list_nets
    msg: "{{ virt_net_name }} already defined, please remove first with virt_net_remove: True"

- name: "INFO: Get network xml"
  virt_net:
    name: "{{ item }}"
    command: get_xml
  loop: "{{ a_result.list_nets }}"
  register: b_result

- name: "FACTS: Set xml and network address facts"
  set_fact:
    net_xml: "{{ (b_result | json_query('results[*].get_xml')) | first }}"
    default_net_ip:
      "{{ (b_result.results 
      | selectattr('item', 'match', 'default')
      | first).get_xml
      | regex_search(\"ip.*address='([0-9\\.]*)'\",\"\\1\")
      | first }}"

- name: "FACTS: Set new network fact"
  set_fact:
    new_net: >-
      {%- set ns = namespace(found=false) -%}
      {%- set net_portion=(default_net_ip|regex_search("^([0-9]{1,3}\.){2}")) -%}
      {%- for subnet in range(default_net_ip.split('.')[2]|int,250) -%}
      {%- if ns.found is sameas false -%}
      {%- if (net_xml | regex_findall( net_portion + subnet|string ) | count ) == 0 -%}
      {%- set ns.found=true -%}
      {{ net_portion + subnet|string }}
      {%- else -%}
      {%- endif -%}
      {%- endif -%}
      {%- endfor -%}

- name: "CONFIG: Generate directory - {{ gen_dir }}"
  file:
    path: "{{ gen_dir }}"
    state: directory

- name: "CONFIG: Generate network xml template"
  template:
    src: virt_net.xml.j2
    dest: "{{ gen_dir }}/{{ virt_net_name }}_inst.xml"

- name: "CONFIG: Add custom dnsmasq attributes to network"
  xml:
    path: "{{ gen_dir }}/{{ virt_net_name }}_inst.xml"
    xpath: "{{ item.xpath }}"
    attribute: "{{ item.attribute|default(omit) }}"
    value: "{{ item.value|default(omit) }}"
    namespaces:
      a: http://libvirt.org/schemas/network/dnsmasq/1.0
    pretty_print: true
  loop: "{{ dnsmasq_xtra_list }}"

- name: "CONFIG: Define {{ virt_net_name }} network"
  virt_net:
    command: define
    name: "{{ virt_net_name }}"
    xml: "{{ lookup('file', gen_dir + '/' + virt_net_name + '_inst.xml') }}"
  when: virt_net_name not in a_result.list_nets

- name: "CONFIG: Configure systemd-resolve using NetworkManager dispatcher"
  template:
    src: 99-domain.sh.j2
    dest: /etc/NetworkManager/dispatcher.d/99-{{ virt_net_name }}.sh
    mode: '0755'
  become: true
    
- name: "CONFIG: Create directory to hold dns records"
  file:
    path: /usr/local/etc/domains
    state: directory
    mode: '0755'
  become: true
    
- name: "CONFIG: Initialize the dns hosts file"
  copy:
    content: "# Generated by installer\n# hosts file for {{ virt_net_domain }}"
    dest: /usr/local/etc/domains/{{ virt_net_domain }}
  # file:
  #   path: /usr/local/etc/domains/{{ virt_net_domain }}
  #   state: touch
  #   mode: '0644'
  become: true
    
- name: "CONFIG: Start {{ virt_net_name }} network"
  virt_net:
    name: "{{ virt_net_name }}"
    command: start

- name: "CONFIG: Set autostart for {{ virt_net_name }} network"
  virt_net:
    name: "{{ virt_net_name }}"
    autostart: true
