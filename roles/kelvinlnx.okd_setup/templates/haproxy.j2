global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#---------------------------------------------------------------------
# round robin balancing for RHOCP Kubernetes API Server
#---------------------------------------------------------------------
frontend k8s_api
	bind {{ net_gw }}:6443
	mode tcp
	default_backend k8s_api_backend
backend k8s_api_backend
	balance roundrobin
	mode tcp
    {% for data in node_list %}
	server {{ data.name }} {{ data.ip }}:6443 check
	{% endfor %}
# ---------------------------------------------------------------------
# round robin balancing for RHOCP Machine Config Server
# ---------------------------------------------------------------------
frontend machine_config
	bind {{ net_gw }}:22623
	mode tcp
	default_backend machine_config_backend
backend machine_config_backend
	balance roundrobin
	mode tcp
    {% for data in node_list ) %}
	server {{ data.name }} {{ data.ip }}:22623 check
	{% endfor %}
# ---------------------------------------------------------------------
# round robin balancing for RHOCP Ingress Insecure Port
# ---------------------------------------------------------------------
frontend ingress_insecure
	bind {{ net_gw }}:80
	mode tcp
	default_backend ingress_insecure_backend
backend ingress_insecure_backend
	balance roundrobin
	mode tcp
    {% for data in node_list if not data.name == 'bootstrap' %}
	server {{ data.name }} {{ data.ip }}:80 check
	{% endfor %}

# ---------------------------------------------------------------------
# round robin balancing for RHOCP Ingress Secure Port
# ---------------------------------------------------------------------
frontend ingress_secure
	bind {{ net_gw }}:443
	mode tcp
	default_backend ingress_secure_backend
backend ingress_secure_backend
	balance roundrobin
	mode tcp
    {% for data in node_list if not data.name == 'bootstrap' %}
	server {{ data.name }} {{ data.ip }}:443 check
	{% endfor %}


# ---------------------------------------------------------------------
# Exposing HAProxy Statistic Page
# ---------------------------------------------------------------------
listen stats
	bind {{ net_gw }}:32700
	stats enable
	stats uri /
	stats hide-version
	stats auth admin:naruto

